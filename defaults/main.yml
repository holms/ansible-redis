---
# redis_bind: <-- define this in your settings
redis_port: 6379
redis_pidfile: /var/run/redis.pid

# Should string, or else it produces True in template
redis_daemonize: "yes"

# Close the connection after a client is idle for N seconds (0 to disable)
redis_timeout: 100

# TCP keepalive.
#
# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence
# of communication. This is useful for two reasons:
#
# 1) Detect dead peers.
# 2) Take the connection alive from the point of view of network
#    equipment in the middle.
#
# On Linux, the specified value (in seconds) is the period used to send ACKs.
# Note that to close the connection the double of the time is needed.
# On other kernels the period depends on the kernel configuration.
#
# A reasonable value for this option is 60 seconds.

redis_keepalive: 0


# debug, verbose, notice, warning
redis_loglevel: notice
redis_logfile: /var/log/redis/redis-server.log

# Enable syslog
redis_syslog: no

# Specify the syslog identity.
redis_syslog_ident: redis

# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.
redis_syslog_facility: local0

# Set the number of databases. The default database is DB 0, you can select
# a different one on a per-connection basis using SELECT <dbid> where
# dbid is a number between 0 and 'databases'-1

redis_databases: 16

#   In the example below the behaviour will be to save:
#   after 900 sec (15 min) if at least 1 key changed
#   after 300 sec (5 min) if at least 10 keys changed
#   after 60 sec if at least 1000 keys changed
#
redis_backup_save:
    - "900 1"
    - "300 10"
    - "60 1000"

# Set the max number of connected clients at the same time. By default
# this limit is set to 10000 clients, however if the Redis server is not
# able to configure the process file limit to allow for the specified limit
# the max number of allowed clients is set to the current file limit
# minus 32 (as Redis reserves a few file descriptors for internal uses).
#
# Once the limit is reached Redis will close all the new connections sending
# an error 'max number of clients reached'.

redis_max_clients: 10000


